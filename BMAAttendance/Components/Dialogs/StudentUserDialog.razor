@inject BMAService bmaService

<MudDialog>
    <DialogContent>
        <MudSimpleTable Striped Bordered>
            <thead>
                <tr>
                    <th>User Name</th>
                    <th>Access</th>
                </tr>
            </thead>
            <tbody>
                @foreach (BMAUser user in Users)
                {
                    <tr>
                        <td>@user.UserName</td>
                        <td>
                            <MudStack>
                                @foreach (BMAStudentUser studentUser in user.Students)
                                {
                                    <p>
                                        @Students.FirstOrDefault(e => e.ID == studentUser.StudentID)?.StudentName
                                        <MudIconButton OnClick="() => RemoveAccess(studentUser)" Icon="@Icons.Material.TwoTone.DeleteForever" Color="Color.Error" />
                                    </p>
                                }
                                <MudStack Row>
                                <MudSelect @bind-Value="user.SelectedStudent" Clearable>
                                    @foreach (BMAStudent student in Students.Where(e => !user.Students.Any(f => f.StudentID == e.ID)).OrderBy(e => e.LastName))
                                    {
                                        <MudSelectItem Value="student">@student.StudentName</MudSelectItem>
                                    }
                                </MudSelect>
                                <MudIconButton OnClick="() => AddAccess(user, false)" Disabled="user.SelectedStudent == null" Icon="@Icons.Material.TwoTone.AddCircle" Color="Color.Success" />
                                @*<MudIconButton OnClick="() => AddAccess(user, true)" Disabled="user.SelectedStudent == null" Icon="@Icons.Material.TwoTone.Edit" Color="Color.Success" />*@
                                </MudStack>
                            </MudStack>
                        </td>
                    </tr>
                }
            </tbody>
        </MudSimpleTable>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Close" Variant="Variant.Filled" Color="Color.Info">Close</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] public MudDialogInstance MudDialog { get; set; }
    [Parameter] public BMAUser? User { get; set; }
    private List<BMAUser> Users { get; set; } = [];
    private List<BMAStudent> Students { get; set; } = [];
    protected override void OnInitialized()
    {
        Users = bmaService.GetNonInstructorUsers();
        Students = bmaService.GetStudents();
    }
    private void Close()
    {
        MudDialog.Cancel();
    }
    private void Save()
    {
        Close();
    }
    private void AddAccess(BMAUser user, bool edit)
    {
        if (user.SelectedStudent == null)
            return;
        BMAStudentUser newuser = new BMAStudentUser() {
            StudentID = user.SelectedStudent.ID,
            UserID = user.UserID,
            EditInfo = edit
        };
        bmaService.CreateStudentUser(newuser);
        user.Students.Add(newuser);
        user.SelectedStudent = null;
    }
    private void RemoveAccess(BMAStudentUser stuser)
    {
        BMAUser? user = Users.FirstOrDefault(e => e.UserID == stuser.UserID);
        if (user != null)
        {
            user.Students.Remove(stuser);
            bmaService.DeleteStudentUser(stuser);
        }
    }
}